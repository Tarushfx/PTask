scalar GraphQLDate

enum State {
    notStarted
    inProgress
    completed
}

type Project {
    title: String!
    created: GraphQLDate!
    state: State!
    description: String
}

type Task {
    title: String!
    created: GraphQLDate!
    state: State!
    description: String
}

type UserData {
    _id: ID!
    name: String!
    email: String!
    tasks: [Task]
    projects: [Project]
    likes: [String]
}

type User {
    _id: ID!
    name: String!
    email: String!
    password: String!
    token: String
}

input getData {
    _id: ID!
}

input UserInputs {
    name: String!
    email: String!
    password: String!
}

input UserLoginInputs {
    email: String!,
    password: String!
}

type Query{
    about: String!
    userData(user: getData!): UserData!
    UserSignIn(user: UserLoginInputs!): User
}

type Mutation {
    setAboutMessage(message: String!): String!
    UserAdd(user: UserInputs!): User!
}